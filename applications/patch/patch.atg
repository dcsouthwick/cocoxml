SECTION license
/*-------------------------------------------------------------------------
 patch.atg
 Copyright (C) 2008, Charles Wang
 Author: Charles Wang  <charlesw123456@gmail.com>
 License: LGPLv2
-------------------------------------------------------------------------*/
END.

SCHEME c Patch

SECTION hIncludes
END.

SECTION cIncludes
END.

COMPILER Patch

MEMBERS
    int subStart, subNum;
    int addStart, addNum;

CONSTRUCTOR
    self->subNum = 0;
    self->addNum = 0;

DESTRUCTOR

OPTIONS space

TERMINALS InPiece

CHARACTERS
    digit  = "0123456789".
    cr     = '\r'.
    lf     = '\n'.
    infoch = ANY - cr - lf - digit.

TOKENS
    number = digit { digit }.
    eol    = (cr lf) | lf.
    infoch = infoch.

PRODUCTIONS

Patch = FilePatch { FilePatch }.

FilePatch = { HeadLine } FileSubLine FileAddLine Piece { Piece }.

HeadLine = infoch { ANY } eol.

FileSubLine = "--- " { ANY } eol.
FileAddLine = "+++ " { ANY } eol.

Piece = PieceTitle PieceLine { PieceLine }
    (. if (self->subNum != 0 || self->addNum != 0)
           PatchParser_SemErrT(self, "Patch format corrupt."); .)
.

PieceTitle =
  "@@" ' ' { ' ' } '-' number     (. self->subStart = atoi(self->t->val); .)
  [',' number                     (. self->subNum = atoi(self->t->val); .)
  ] ' ' { ' ' } '+' number        (. self->addStart = atoi(self->t->val); .)
  [',' number                     (. self->addNum = atoi(self->t->val); .)
  ] ' ' { ' ' } "@@" { ANY } eol  (. PatchScanner_InsertExpect(&self->scanner, PatchScanner_InPiece,
      	    	       	      	 			       NULL, 0, &self->la); .)
.

PieceLine (. char op; .) =
  InPiece ('+' | '-' | ' ' | '\\')   (. op = *self->t->val; .)
  { ANY } eol
    (. switch (op) {
       case '+': --self->addNum; break;
       case '-': --self->subNum; break;
       case ' ': --self->addNum; --self->subNum; break;
       case '\\': break;
       }
       if (self->subNum < 0 || self->addNum < 0)
           PatchParser_SemErrT(self, "Patch format corrupt.");
       if (self->subNum > 0 || self->addNum > 0)
           PatchScanner_InsertExpect(&self->scanner, PatchScanner_InPiece,
	   			     NULL, 0, &self->la); .)
.

END Patch.
