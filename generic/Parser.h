/* -*- c -*- */
/*---- open(Parser.h) S ----*/
/*---- open(c.Parser.frame) F ----*/
/*-------------------------------------------------------------------------
  Author (C) 2008, Charles Wang <charlesw123456@gmail.com>

  This program is free software; you can redistribute it and/or modify it 
  under the terms of the GNU General Public License as published by the 
  Free Software Foundation; either version 2, or (at your option) any 
  later version.

  This program is distributed in the hope that it will be useful, but 
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
  for more details.

  You should have received a copy of the GNU General Public License along 
  with this program; if not, write to the Free Software Foundation, Inc., 
  59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

  As an exception, it is allowed to write an extension of Coco/R that is
  used as a plugin in non-free software.

  If not otherwise stated, any source code generated by Coco/R (other than 
  Coco/R itself) does not fall under the GNU General Public License.
-------------------------------------------------------------------------*/
/*---- enable ----*/
#ifndef  COCO_PARSER_H
#define  COCO_PARSER_H

#include  <stdio.h>
#include  "Scanner.h"

EXTC_BEGIN

/*---- headerdef ----*/
/*---- enable ----*/

typedef struct {
    FILE * fp;
    int count;
}  Errors_t;

Errors_t * Errors(Errors_t * self, FILE * fp);
void Errors_Destruct(Errors_t * self);
void Errors_SynErr(Errors_t * self, int line, int col, int n);
void Errors_Warning(Errors_t * self, int line, int col, const char * s);
void Errors_WarningS(Errors_t * self, const char * s);
void Errors_Exception(Errors_t * self, const char * s);

typedef struct Parser_s Parser_t;
struct Parser_s {
    /*---- constantsheader ----*/
    /*---- enable ----*/
    int             errDist;
    int             minErrDist;

    Scanner_t     * scanner;
    Errors_t        errors;
    const Token_t * t;
    const Token_t * la;

    int             maxT;

    FILE          * trace;
    Tab_t         * tab;
    ParserGen_t   * pgen;
    /*---- declarations ----*/
    /*---- enable ----*/
};

Parser_t * Parser(Parser_t * self, Scanner_t * scanner);
void Parser_Destruct(Parser_t * self);
void Parser_SemErr(Parser_t * self, const char * format, ...);
void Parser_Parse(Parser_t * self);

/*---- productionsheader ----*/
/*---- enable ----*/

EXTC_END

#endif  /* COCO_PARSER_H */
