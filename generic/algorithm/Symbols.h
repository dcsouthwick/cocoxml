/*-------------------------------------------------------------------------
  Author (C) 2008, Charles Wang <charlesw123456@gmail.com>

  This program is free software; you can redistribute it and/or modify it 
  under the terms of the GNU General Public License as published by the 
  Free Software Foundation; either version 2, or (at your option) any 
  later version.

  This program is distributed in the hope that it will be useful, but 
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
  for more details.

  You should have received a copy of the GNU General Public License along 
  with this program; if not, write to the Free Software Foundation, Inc., 
  59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

  As an exception, it is allowed to write an extension of Coco/R that is
  used as a plugin in non-free software.

  If not otherwise stated, any source code generated by Coco/R (other than 
  Coco/R itself) does not fall under the GNU General Public License.
-------------------------------------------------------------------------*/
#ifndef  COCO_SYMBOLS_H
#define  COCO_SYMBOLS_H

#ifndef  COCO_OBJECT_H
#include  "Object.h"
#endif

#ifndef  COCO_BITARRAY_H
#include "BitArray.h"
#endif

#ifndef  COCO_POSITION_H
#include "c/Position.h"
#endif

EXTC_BEGIN

typedef struct CcSymbolT_s CcSymbolT_t;
typedef struct CcSymbolPR_s CcSymbolPR_t;
typedef struct CcSymbolNT_s CcSymbolNT_t;
typedef struct CcSymbolUnknown_s CcSymbolUnknown_t;
typedef struct CcSymbolRSLV_s CcSymbolRSLV_t;

typedef enum {
    symbol_fixedToken = 0,
    symbol_classToken = 1,
    symbol_litToken = 2,
    symbol_classLitToken = 3,
} CcSymbol_TokenKind_t;

struct CcSymbol_s {
    CcObject_t   base;
    char       * name;
    int          line;
};

struct CcSymbolT_s {
    CcSymbol_t             base;
    CcSymbol_TokenKind_t   tokenKind;
};

struct CcSymbolPR_s {
    CcSymbol_t             base;
    CcSymbol_TokenKind_t   tokenKind;
    CcsPosition_t        * semPos;
};

struct CcSymbolNT_s {
    CcSymbol_t      base;
    CcNode_t      * graph;
    CcsBool_t       deletable;
    CcsBool_t       firstReady;
    CcBitArray_t  * first;
    CcBitArray_t    firstSpace;
    CcBitArray_t  * follow;
    CcBitArray_t    followSpace;
    CcBitArray_t  * nts;
    CcBitArray_t    ntsSpace;
    CcsPosition_t * attrPos;
};

struct CcSymbolUnknown_s {
    CcSymbol_t base;
};

struct CcSymbolRSLV_s {
    CcSymbol_t base;
};

extern const CcObjectType_t * symbol_t;
extern const CcObjectType_t * symbol_nt;
extern const CcObjectType_t * symbol_pr;
extern const CcObjectType_t * symbol_unknown;
extern const CcObjectType_t * symbol_rslv;

CcSymbol_TokenKind_t CcSymbol_GetTokenKind(CcSymbol_t * self);
void CcSymbol_SetTokenKind(CcSymbol_t * self, CcSymbol_TokenKind_t tokenKind);

EXTC_END

#endif  /* COCO_SYMBOLS_H */
