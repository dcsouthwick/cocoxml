/*-------------------------------------------------------------------------
  Author (C) 2008, Charles Wang <charlesw123456@gmail.com>

  This program is free software; you can redistribute it and/or modify it 
  under the terms of the GNU General Public License as published by the 
  Free Software Foundation; either version 2, or (at your option) any 
  later version.

  This program is distributed in the hope that it will be useful, but 
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
  for more details.

  You should have received a copy of the GNU General Public License along 
  with this program; if not, write to the Free Software Foundation, Inc., 
  59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

  As an exception, it is allowed to write an extension of Coco/R that is
  used as a plugin in non-free software.

  If not otherwise stated, any source code generated by Coco/R (other than 
  Coco/R itself) does not fall under the GNU General Public License.
-------------------------------------------------------------------------*/
#ifndef  COCO_ERRORPOOL_H
#define  COCO_ERRORPOOL_H

#include  <stdarg.h>

#ifndef   COCO_OBJECT_H
#include  "Object.h"
#endif

EXTC_BEGIN

struct CsErrorPoolType_s {
    CsObjectType_t base;

    void (* info)(CsErrorPool_t * self, const char * format, va_list ap);
    void (* warning)(CsErrorPool_t * self, const char * format, va_list ap);
    void (* error)(CsErrorPool_t * self, const char * format, va_list ap);
    void (* fatal)(CsErrorPool_t * self, const char * format, va_list ap);
};

struct CsErrorPool_s {
    CsObject_t base;
    int warningCount;
    int errorCount;
};

CsErrorPool_t * CsErrorPool(CsErrorPool_t * self, const CsErrorPoolType_t * type);
void CsErrorPool_Destruct(CsErrorPool_t * self);

void CsErrorPool_Info(CsErrorPool_t *, const char * format, ...);
void CsErrorPool_Warning(CsErrorPool_t * self, const char * format, ...);
void CsErrorPool_Error(CsErrorPool_t * self, const char * format, ...);
void CsErrorPool_Fatal(CsErrorPool_t * self, const char * format, ...);

EXTC_END

#endif /* COCO_ERRORPOOL_H */
