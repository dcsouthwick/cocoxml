SECTION license
/*-------------------------------------------------------------------------
pgn.atg -- atg for chess pgn file
Copyright (C) 2008, Charles Wang <charlesw123456@gmail.com>
Author: Charles Wang <charlesw123456@gmail.com>

 This program is free software; you can redistribute it and/or modify it 
 under the terms of the GNU General Public License as published by the 
 Free Software Foundation; either version 2, or (at your option) any 
 later version.

 This program is distributed in the hope that it will be useful, but 
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 for more details.

 You should have received a copy of the GNU General Public License along 
 with this program; if not, write to the Free Software Foundation, Inc., 
 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
-------------------------------------------------------------------------*/
END.

SCHEME c Pgn
UPDATES "Scanner.h" "Scanner.c" "Parser.h" "Parser.c" END.

SECTION hIncludes
#ifndef   COCO_PGNOPER_H
#include  "pgnoper.h"
#endif
END.

COMPILER pgn

MEMBERS
    PgnGame_t * firstGame;
    PgnGame_t * lastGame;

CONSTRUCTOR
    self->firstGame = self->lastGame = NULL;

DESTRUCTOR
    PgnGame_t * cur, * next;
    for (cur = self->firstGame; cur; cur = next) {
        next = cur->next;
	PgnGame_Destruct(cur);
    }

CHARACTERS
    piece     = "KQRBN".
    row       = "12345678".
    col       = "abcdefgh".
    letter    = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_".
    digit     = "0123456789".
    cr        = '\r'.
    lf        = '\n'.
    tab       = '\t'.
    stringCh  = ANY - '"' - '\\' - cr - lf.
    resultCh  = ANY - '}' - '\\' - cr - lf.
    printable =  '\x20' .. '\x7e'.

TOKENS
    number    = digit { digit }.
    string    = '"' { stringCh | '\\' printable } '"'.
    result    = '{' { resultCh | '\\' printable } '}'.
    basemove  = [piece] [col] [row] ['x'] col row [ '=' piece ] ['#' | { '+' } | { '?' } | { '!' }].
    castling  = "O-O" ['#' | { '+' } | { '?' } | { '!' }].
    castlingL = "O-O-O" ['#' | { '+' } | { '?' } | { '!' }].

IGNORE cr + lf + tab

PRODUCTIONS

pgn = (. PgnGame_t * game; .)
  { game<&game> (. if (self->lastGame) { self->lastGame->next = game; self->lastGame = game; }
                   else { self->firstGame = self->lastGame = game; } .)
  }
.

game<PgnGame_t ** game> = (. char * Event = NULL;
	       	  	     char * Site = NULL;
			     char * Date = NULL;
			     char * Round = NULL;
			     char * White = NULL;
			     char * Black = NULL;
			     char * WhiteElo = NULL;
			     char * BlackElo = NULL;
			     char * TimeControl = NULL;
			     char * Result = NULL; .)
  { ( '[' "Event" string                 (. if (!Event) Event = CcsStrdup(self->t->val); .)
      ']' ) | ( '[' "Site" string        (. if (!Site) Site = CcsStrdup(self->t->val); .)
      ']' ) | ( '[' "Date" string        (. if (!Date) Date = CcsStrdup(self->t->val); .)
      ']' ) | ( '[' "Round" string       (. if (!Round) Round = CcsStrdup(self->t->val); .)
      ']' ) | ( '[' "White" string       (. if (!White) White = CcsStrdup(self->t->val); .)
      ']' ) | ( '[' "Black" string       (. if (!Black) Black = CcsStrdup(self->t->val); .)
      ']' ) | ( '[' "WhiteElo" string    (. if (!WhiteElo) WhiteElo = CcsStrdup(self->t->val); .)
      ']' ) | ( '[' "BlackElo" string    (. if (!BlackElo) BlackElo = CcsStrdup(self->t->val); .)
      ']' ) | ( '[' "TimeControl" string (. if (!TimeControl) TimeControl = CcsStrdup(self->t->val); .)
      ']' ) | ( '[' "Result" string      (. if (!Result) Result = CcsStrdup(self->t->val); .)
      ']' ) }
  (. *game = PgnGame(Event, Site, Date, Round, White, Black,
     	             WhiteElo, BlackElo, TimeControl, Result); .)
 { round
  } result
    resultnum
.

round = number '.' move [ move ].

move = basemove | castling | castlingL.

resultnum = "1-0" | "0-1" | "1/2-1/2".

END pgn.
