/*-------------------------------------------------------------------------
  Author (C) 2008, Charles Wang <charlesw123456@gmail.com>

  This program is free software; you can redistribute it and/or modify it 
  under the terms of the GNU General Public License as published by the 
  Free Software Foundation; either version 2, or (at your option) any 
  later version.

  This program is distributed in the hope that it will be useful, but 
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
  for more details.

  You should have received a copy of the GNU General Public License along 
  with this program; if not, write to the Free Software Foundation, Inc., 
  59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

  As an exception, it is allowed to write an extension of Coco/R that is
  used as a plugin in non-free software.

  If not otherwise stated, any source code generated by Coco/R (other than 
  Coco/R itself) does not fall under the GNU General Public License.
-------------------------------------------------------------------------*/
#ifndef  COCO_CHARSET_H
#define  COCO_CHARSET_H

#ifndef  COCO_DEFS_H
#include "Defs.h"
#endif

EXTC_BEGIN

typedef struct Range_s Range_t;
struct CharSet_s {
    Range_t * head;
};

CharSet_t * CharSet(CharSet_t * self);
void CharSet_Destruct(CharSet_t * self);
gboolean CharSet_Get(const CharSet_t * self, int i);
int CharSet_Set(CharSet_t * self, int i);
CharSet_t * CharSet_Clone(CharSet_t * self, const CharSet_t * s);
gboolean CharSet_Equals(const CharSet_t * self, const CharSet_t * s);
int CharSet_Elements(const CharSet_t * self);
int CharSet_First(const CharSet_t * self);
int CharSet_Or(CharSet_t * self, const CharSet_t * s);
int CharSet_And(CharSet_t * self, const CharSet_t * s);
int CharSet_Subtract(CharSet_t * self, const CharSet_t * s);
gboolean CharSet_Includes(const CharSet_t * self, const CharSet_t * s);
gboolean CharSet_Intersects(const CharSet_t * self, const CharSet_t * s);
void CharSet_Clear(CharSet_t * self);
int CharSet_Fill(CharSet_t * self);

void CharSet_Dump(const CharSet_t * self, DumpBuffer_t * buf);
void CharSet_DumpInt(const CharSet_t * self, DumpBuffer_t * buf);

EXTC_END

#endif  /* COCO_CHARSET_H */
