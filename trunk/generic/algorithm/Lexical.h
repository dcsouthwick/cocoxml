/*-------------------------------------------------------------------------
  Author (C) 2008, Charles Wang <charlesw123456@gmail.com>

  This program is free software; you can redistribute it and/or modify it 
  under the terms of the GNU General Public License as published by the 
  Free Software Foundation; either version 2, or (at your option) any 
  later version.

  This program is distributed in the hope that it will be useful, but 
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
  or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
  for more details.

  You should have received a copy of the GNU General Public License along 
  with this program; if not, write to the Free Software Foundation, Inc., 
  59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

  As an exception, it is allowed to write an extension of Coco/R that is
  used as a plugin in non-free software.

  If not otherwise stated, any source code generated by Coco/R (other than 
  Coco/R itself) does not fall under the GNU General Public License.
-------------------------------------------------------------------------*/
#ifndef  COCO_LEXICAL_H
#define  COCO_LEXICAL_H

#ifndef  COCO_ARRAYLIST_H
#include "ArrayList.h"
#endif

EXTC_BEGIN

#define  CcNormalTrans   0
#define  CcContextTrans  1

struct CcLexical_s {
    CcGlobals_t * globals;
    CcNode_t * dummyNode;
    CcArrayList_t nodes;
    CcArrayList_t classes;
};

CcLexical_t * CcLexical(CcLexical_t * self, CcGlobals_t * globals);
void CcLexical_Destruct(CcLexical_t * self);

CcGraph_t *
CcLexical_StrToGraph(CcLexical_t * self, const char * str, CcsToken_t * t);
void CcLexical_SetContextTrans(CcLexical_t * self, CcNode_t * p);

CcNode_t * CcLexical_NewNodeChr(CcLexical_t * self, int ch);

CcCharClass_t *
CcLexical_NewCharClass(CcLexical_t * self, const char * name, CcCharSet_t * s);

CcCharClass_t *
CcLexical_FindCharClassN(CcLexical_t * self, const char * name);

CcCharClass_t *
CcLexical_FindCharClassC(CcLexical_t * self, const CcCharSet_t * s);

CcCharSet_t *
CcLexical_CharClassSet(CcLexical_t * self, int idx);

EXTC_END

#endif  /* COCO_LEXICAL_H */
